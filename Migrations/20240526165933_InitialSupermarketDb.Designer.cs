// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Supermarket.Data;

#nullable disable

namespace Supermarket.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20240526165933_InitialSupermarketDb")]
    partial class InitialSupermarketDb
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Supermarket.Models.EntityLayer.Category", b =>
                {
                    b.Property<string>("ID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("Supermarket.Models.EntityLayer.Discount", b =>
                {
                    b.Property<string>("ID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateOnly>("End")
                        .HasColumnType("date");

                    b.Property<int>("Percentage")
                        .HasColumnType("int");

                    b.Property<string>("ProductID")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Reason")
                        .HasColumnType("int");

                    b.Property<DateOnly>("Start")
                        .HasColumnType("date");

                    b.HasKey("ID");

                    b.HasIndex("ProductID")
                        .IsUnique();

                    b.ToTable("Discounts");
                });

            modelBuilder.Entity("Supermarket.Models.EntityLayer.Producer", b =>
                {
                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Name");

                    b.ToTable("Producers");
                });

            modelBuilder.Entity("Supermarket.Models.EntityLayer.Product", b =>
                {
                    b.Property<string>("ID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Barcode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CategoryID")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateOnly>("ExpirationDate")
                        .HasColumnType("date");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("Price")
                        .HasColumnType("real");

                    b.Property<string>("ProducerName")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("ID");

                    b.HasIndex("CategoryID");

                    b.HasIndex("ProducerName");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("Supermarket.Models.EntityLayer.Receipt", b =>
                {
                    b.Property<string>("ID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CashierID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("Emitted")
                        .HasColumnType("datetime2");

                    b.Property<int>("ReceiptId")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("CashierID");

                    b.ToTable("Receipts");
                });

            modelBuilder.Entity("Supermarket.Models.EntityLayer.ReceiptItem", b =>
                {
                    b.Property<string>("ID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProductID")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<float>("Quantity")
                        .HasColumnType("real");

                    b.Property<string>("ReceiptID")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<float>("Subtotal")
                        .HasColumnType("real");

                    b.HasKey("ID");

                    b.HasIndex("ProductID");

                    b.HasIndex("ReceiptID");

                    b.ToTable("ReceiptItem");
                });

            modelBuilder.Entity("Supermarket.Models.EntityLayer.Stock", b =>
                {
                    b.Property<string>("ID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<float>("BuyingPrice")
                        .HasColumnType("real");

                    b.Property<DateTime>("ExpirationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Measurement")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("RestockDate")
                        .HasColumnType("datetime2");

                    b.Property<float>("SellingPrice")
                        .HasColumnType("real");

                    b.HasKey("ID");

                    b.ToTable("Stocks");
                });

            modelBuilder.Entity("Supermarket.Models.EntityLayer.User", b =>
                {
                    b.Property<string>("ID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Supermarket.Models.EntityLayer.Discount", b =>
                {
                    b.HasOne("Supermarket.Models.EntityLayer.Product", null)
                        .WithOne("Discount")
                        .HasForeignKey("Supermarket.Models.EntityLayer.Discount", "ProductID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Supermarket.Models.EntityLayer.Product", b =>
                {
                    b.HasOne("Supermarket.Models.EntityLayer.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Supermarket.Models.EntityLayer.Producer", "Producer")
                        .WithMany()
                        .HasForeignKey("ProducerName");

                    b.Navigation("Category");

                    b.Navigation("Producer");
                });

            modelBuilder.Entity("Supermarket.Models.EntityLayer.Receipt", b =>
                {
                    b.HasOne("Supermarket.Models.EntityLayer.User", "Cashier")
                        .WithMany()
                        .HasForeignKey("CashierID");

                    b.Navigation("Cashier");
                });

            modelBuilder.Entity("Supermarket.Models.EntityLayer.ReceiptItem", b =>
                {
                    b.HasOne("Supermarket.Models.EntityLayer.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Supermarket.Models.EntityLayer.Receipt", "Receipt")
                        .WithMany("Items")
                        .HasForeignKey("ReceiptID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("Receipt");
                });

            modelBuilder.Entity("Supermarket.Models.EntityLayer.Product", b =>
                {
                    b.Navigation("Discount");
                });

            modelBuilder.Entity("Supermarket.Models.EntityLayer.Receipt", b =>
                {
                    b.Navigation("Items");
                });
#pragma warning restore 612, 618
        }
    }
}
